<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <context id="DB2Tables" targetRuntime="MyBatis3">

        <!--实体类实现序列化接口的插件-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <!-- 配置生成pojo的toString()方法的插件-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <commentGenerator>
            <!--关闭注释-->
            <property name="suppressAllComments" value="true"></property>
        </commentGenerator>
        <!-- 设定数据库连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/jianzhi"
                        userId="root"
                        password="">
        </jdbcConnection>

        <!--  生成 实体类 存放的位置  -->
        <javaModelGenerator targetPackage="com.mydemo.applications.entity" targetProject=".\src\main\java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成的映射文件的位置 -->
        <sqlMapGenerator targetPackage="com/mydemo/applications/mapper" targetProject=".\src\main\resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成的接口的存放位置  -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.mydemo.applications.mapper" targetProject=".\src\main\java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--  设定反向生成的表 shift+alt+鼠标 -->

        <table tableName="position_desc"></table>
    </context>
</generatorConfiguration>
        <!--
 try {
            List<String> warnings = new ArrayList<String>();
            boolean overwrite = true;
            File configFile=new File("E:\\idea\\ssm_test\\src\\test\\resources\\generator.xml");
            ConfigurationParser cp = new ConfigurationParser(warnings);
            Configuration config = cp.parseConfiguration(configFile);
            DefaultShellCallback callback = new DefaultShellCallback(overwrite);
            MyBatisGenerator MyBatisGenerator =
                    new MyBatisGenerator(config, callback, warnings);
            MyBatisGenerator.generate(null);
        }catch (Exception e){
            e.printStackTrace();
        }
-->
